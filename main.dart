// ุงุณุชูุฑุงุฏ ููุชุจุงุช Flutter ุงูุฃุณุงุณูุฉ
import 'package:flutter/material.dart';
// ุงุณุชูุฑุงุฏ ููุชุจุฉ ูุคูุช ูุชุชุจุน ุงูููุช
import 'dart:async';
// ุงุณุชูุฑุงุฏ ููุชุจุฉ ุชุดุบูู ุงูุตูุช
import 'package:audioplayers/audioplayers.dart';
// ุงุณุชูุฑุงุฏ ููุชุจุฉ ุชุดุบูู ุงูููุฏูู
import 'package:video_player/video_player.dart';

// ุฏุงูุฉ ุงูุชุดุบูู ุงูุฑุฆูุณูุฉ ูุชุดุบูู ุงูุชุทุจูู
void main() {
  runApp(EnvironmentQuizApp());
}

// ุชุทุจูู ุฑุฆูุณู ููุซู ุจุฏุงูุฉ ุงูุชุทุจูู
class EnvironmentQuizApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // ุจูุงุก ูุงุฌูุฉ ุงูุชุทุจูู
    return MaterialApp(
      debugShowCheckedModeBanner: false, // ุฅุฎูุงุก ุดุฑูุท ุงูุชุตุญูุญ
      theme: ThemeData(
        primarySwatch: Colors.green, // ุงุณุชุฎุฏุงู ููู ุฃุณุงุณู ุฃุฎุถุฑ
        textTheme: TextTheme(
          bodyMedium: TextStyle(
            fontSize: 18, // ุญุฌู ุงูุฎุท ุงููุชูุณุท
            fontWeight: FontWeight.w500, // ุณูู ุงูุฎุท
            color: const Color.fromARGB(255, 3, 3, 3), // ููู ุงูุฎุท
          ),
        ),
      ),
      home: WelcomeScreen(), // ุดุงุดุฉ ุงูุชุฑุญูุจ ููุงุฌูุฉ ุฑุฆูุณูุฉ
    );
  }
}
// ุชุนุฑูู ููุงุณ ุดุงุดุฉ ุงูุชุฑุญูุจ ููุฑูุซ ูู StatelessWidget ูุนุฏู ุงูุญุงุฌุฉ ุฅูู ุฅุฏุงุฑุฉ ุญุงูุฉ ูุชุบูุฑุฉ
class WelcomeScreen extends StatelessWidget {
  @override // ูููู ุจุฅุนุงุฏุฉ ุชุนุฑูู ุฏุงูุฉ build ูุชุญุฏูุฏ ูุงุฌูุฉ ุงููุณุชุฎุฏู ุงูุฎุงุตุฉ ุจุงูุดุงุดุฉ
  Widget build(BuildContext context) {
    return Scaffold(   // ุฅุฑุฌุงุน (return) ุนูุตุฑ Scaffoldุ ููู ุงููููู ุงูุฃุณุงุณู ููุงุฌูุฉ ุงููุณุชุฎุฏู

      // ุดุฑูุท ุนููู ูุญุชูู ุนูู ุนููุงู ุงูุชุทุจูู
      appBar: AppBar(title: Text("๐ ุงุฎุชุจุงุฑ ุงูุจูุฆุฉ")),

      // ูุญุชูู ุงูุดุงุดุฉ ุงูุฑุฆูุณู
      body: Container(
        // ุชุญุฏูุฏ ุฎูููุฉ ุงูุดุงุดุฉ
        decoration: BoxDecoration(
          image: DecorationImage(
            // ุชุนููู ุตูุฑุฉ ุงูุฎูููุฉ ูู ูุฌูุฏ ุงูุฃุตูู
            image: AssetImage('assets/ii.png'),

            // ุถุจุท ุงูุตูุฑุฉ ูุชุบุทูุฉ ูุงูู ุงูุดุงุดุฉ
            fit: BoxFit.cover,
          ),
        ),

        // ุฌุนู ุงููุญุชูู ูู ูุณุท ุงูุดุงุดุฉ
        child: Center(
          child: Column(
            // ูุญุงุฐุงุฉ ุงูุนูุงุตุฑ ุนููุฏูุงู ูู ุงูููุชุตู
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // ูููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุนูุงุตุฑ ุงููุงุฌูุฉ ููุง
              // ูุต ุชุฑุญูุจู ุฑุฆูุณู
              Text(
                "ูุฑุญุจูุง ุจู! \n ูู ุฃูุช ูุณุชุนุฏ ูุงุฎุชุจุงุฑ ูุนุฑูุชู ุญูู ุงูุจูุฆุฉุ ๐ฑ",
                style: TextStyle(
                  fontSize: 24, // ุญุฌู ุงูุฎุท
                  fontWeight: FontWeight.bold, // ุฎุท ุนุฑูุถ
                  color: Colors.white, // ููู ุงูุฎุท ุฃุจูุถ
                ),
                textAlign: TextAlign.center, // ุชูุณูุท ุงููุต
              ),
              SizedBox(height: 40), // ูุณุงุญุฉ ูุงุฑุบุฉ
              // ูุต ุฅุถุงูู ุญูู ุงูุงุณุชุฏุงูุฉ
              Padding(
                padding: const EdgeInsets.all(16.0), // ุญูุงู ุฏุงุฎููุฉ
                child: Text(
                  "ุงูุงุณุชุฏุงูุฉ ุชุนูู ุงูุญูุงุธ ุนูู ููุงุฑุฏ ูููุจูุง ููุฃุฌูุงู ุงููุงุฏูุฉ.\n ุฏุนููุง ููุชุดู ูุนูุง ูุฏู ูุนุฑูุชู ุจุงูุจูุฆุฉ!",
                  style: TextStyle(
                    fontSize: 18, // ุญุฌู ุงูุฎุท
                    fontWeight: FontWeight.w400, // ุณูู ุงูุฎุท
                    color: Colors.black, // ููู ุงูุฎุท ุฃุณูุฏ
                  ),
                  textAlign: TextAlign.center, // ุชูุณูุท ุงููุต
                ),
              ),
              SizedBox(height: 40), // ูุณุงุญุฉ ูุงุฑุบุฉ
              // ุฒุฑ ุจุฏุก ุงูุงุฎุชุจุงุฑ
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  padding: EdgeInsets.symmetric(horizontal: 40, vertical: 15), // ุญุฌู ุงูุฒุฑ
                  backgroundColor: Colors.green, // ููู ุงูุฎูููุฉ
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20), // ุญูุงู ุฏุงุฆุฑูุฉ
                  ),
                ),
                onPressed: () {  
                  // ุนูุฏ ุงูุถุบุท ุนูู ุงูุฒุฑุ ูุชู ุงูุชููู ุฅูู ุดุงุดุฉ ุงูุงุฎุชุจุงุฑ
                  Navigator.pushReplacement( // ุงุณุชุจุฏุงู ุงูุดุงุดุฉ ุงูุญุงููุฉ ุจุดุงุดุฉ ุงูุงุฎุชุจุงุฑ ุฏูู ุฅููุงููุฉ ุงูุฑุฌูุน ุฅูููุง
                    context,  
                    MaterialPageRoute(builder: (context) => EnvironmentQuizScreen()), // ุฅูุดุงุก ูุณุงุฑ ุฌุฏูุฏ ูุคุฏู ุฅูู ุดุงุดุฉ ุงูุงุฎุชุจุงุฑ
                  );  
                },  
                child: Text("ุงุจุฏุฃ ุงูุงุฎุชุจุงุฑ",  
                    style: TextStyle(fontSize: 20, color: Colors.white)), // ูุต ุงูุฒุฑ ูุน ุชูุณูู ุงูุฎุท ุจุงูููู ุงูุฃุจูุถ ูุญุฌู 20
              ),
            ],
          ),
        ),
      ),
    );
  }
}
// ุดุงุดุฉ ุงูุงุฎุชุจุงุฑ ุงูุชู ุชุญุชูู ุนูู ุงูุฃุณุฆูุฉ ูุงูุฅุฌุงุจุงุช
class EnvironmentQuizScreen extends StatefulWidget {
  @override
  _EnvironmentQuizScreenState createState() => _EnvironmentQuizScreenState();
}

// ุงูุญุงูุฉ ุงููุฑุชุจุทุฉ ุจุดุงุดุฉ ุงูุงุฎุชุจุงุฑ
class _EnvironmentQuizScreenState extends State<EnvironmentQuizScreen> {
  // ูุงุฆูุฉ ุชุญุชูู ุนูู ุงูุฃุณุฆูุฉ ูุงูุฅุฌุงุจุงุช ุงูููููุฉ ูุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ
  final List<Map<String, dynamic>> questions = [
    {
      "question": "ูุง ูู ุฃูุถู ูุตุฏุฑ ููุทุงูุฉ ุงููุชุฌุฏุฏุฉุ",
      "options": ["ุงููุญู", "ุงูููุท", "ุงูุทุงูุฉ ุงูุดูุณูุฉ", "ุงูุบุงุฒ ุงูุทุจูุนู"],
      "answer": "ุงูุทุงูุฉ ุงูุดูุณูุฉ",
    },
    {
      "question": "ุฃู ูู ูุฐู ุงูุทุฑู ุชุณุงุนุฏ ูู ุชูููู ุงูุชููุซุ",
      "options": [
        "ุฅุนุงุฏุฉ ุงูุชุฏููุฑ",
        "ุญุฑู ุงูููุงูุงุช",
        "ุฅููุงุก ุงูููุงูุฉ ูู ุงูุดุงุฑุน",
        "ุงุณุชุฎุฏุงู ุงูุจูุงุณุชูู"
      ],
      "answer": "ุฅุนุงุฏุฉ ุงูุชุฏููุฑ",
    },
    {
      "question": "ูุง ูู ุงูุบุฑุถ ูู ุฒุฑุงุนุฉ ุงูุฃุดุฌุงุฑุ",
      "options": [
        "ุชูููุฑ ุงูุธู ููุท",
        "ุชูููุฉ ุงูููุงุก",
        "ุชูููุฑ ุงูุฎุดุจ ููุท",
        "ุชุฌููู ุงูุจูุฆุฉ ููุท"
      ],
      "answer": "ุชูููุฉ ุงูููุงุก",
    },
    {
      "question": "ูุงุฐุง ูุฌุจ ุฃู ููุนู ููุญูุงุธ ุนูู ุงูููุงูุ",
      "options": [
        "ุชุฑู ุงูุตูุจูุฑ ููุชูุญูุง",
        "ุฅุตูุงุญ ุงูุชุณุฑูุจุงุช",
        "ุบุณู ุงูุณูุงุฑุฉ ูููููุง",
        "ุฑู ุงููุจุงุชุงุช ุจูููุฉ ูุจูุฑุฉ ูู ุงููุงุก"
      ],
      "answer": "ุฅุตูุงุญ ุงูุชุณุฑูุจุงุช",
    },
    {
      "question": "ูุง ูู ุงูุทุฑููุฉ ุงููุซูู ููุชุฎูุต ูู ุงูููุงูุงุช ุงูุจูุงุณุชูููุฉุ",
      "options": [
        "ุญุฑููุง",
        "ุฏูููุง ูู ุงูุฃุฑุถ",
        "ุฅุนุงุฏุฉ ุชุฏููุฑูุง",
        "ุฑูููุง ูู ุงูุฃููุงุฑ"
      ],
      "answer": "ุฅุนุงุฏุฉ ุชุฏููุฑูุง",
    },
    {
      "question": "ูุง ูู ุฃูุจุฑ ูุดููุฉ ุจูุฆูุฉ ููุงุฌููุง ุงูุนุงูู ุญุงูููุงุ",
      "options": ["ุงูุชุตุญุฑ", "ุชููุซ ุงูููุงู", "ุงูุชุบูุฑ ุงูููุงุฎู", "ุชููุซ ุงูููุงุก"],
      "answer": "ุงูุชุบูุฑ ุงูููุงุฎู",
    },
    {
      "question": "ูุง ูู ุฃูููุฉ ุงูุญูุงุธ ุนูู ุงูุชููุน ุงูุจููููุฌูุ",
      "options": [
        "ููุญูุงุธ ุนูู ุงูุทุนุงู ููุท",
        "ูุชูููุฑ ุงูุทุงูุฉ",
        "ูุชูุงุฒู ุงููุธุงู ุงูุจูุฆู",
        "ูุฒูุงุฏุฉ ุงูุฅูุชุงุฌ ุงูุฒุฑุงุนู"
      ],
      "answer": "ูุชูุงุฒู ุงููุธุงู ุงูุจูุฆู",
    },
    {
      "question": "ูุงุฐุง ูุนูู ูุตุทูุญ 'ุงูุชูููุฉ ุงููุณุชุฏุงูุฉ'ุ",
      "options": [
        "ุงุณุชููุงู ุงูููุงุฑุฏ ุงูุทุจูุนูุฉ ุจุดูู ููุฑุท",
        "ุงุณุชุฎุฏุงู ุงูุทุงูุฉ ุงููุชุฌุฏุฏุฉ ููุท",
        "ุชูุจูุฉ ุงุญุชูุงุฌุงุช ุงูุญุงุถุฑ ุฏูู ุงูุชุฃุซูุฑ ุนูู ุงููุณุชูุจู",
        "ุฒูุงุฏุฉ ุงูุฅูุชุงุฌ ุงูุตูุงุนู"
      ],
      "answer": "ุชูุจูุฉ ุงุญุชูุงุฌุงุช ุงูุญุงุถุฑ ุฏูู ุงูุชุฃุซูุฑ ุนูู ุงููุณุชูุจู",
    },
    {
      "question": "ูุง ูู ุงูุขุซุงุฑ ุงูุณูุจูุฉ ูุงุณุชุฎุฏุงู ุงูููุงุฏ ุงูููููุงุฆูุฉ ูู ุงูุฒุฑุงุนุฉุ",
      "options": [
        "ุชุญุณูู ููู ุงููุญุงุตูู",
        "ุชููุซ ุงูููุงู ูุงูุชุฑุจุฉ",
        "ุฒูุงุฏุฉ ุนุฏุฏ ุงููุญุงุตูู",
        "ุชุญุณูู ุงูุชููุน ุงูุจููููุฌู"
      ],
      "answer": "ุชููุซ ุงูููุงู ูุงูุชุฑุจุฉ",
    },
    {
      "question": "ููู ูููู ุชูููู ุงุณุชุฎุฏุงู ุงูุจูุงุณุชูู ูู ุญูุงุชูุง ุงูููููุฉุ",
      "options": [
        "ุงุณุชุฎุฏุงู ุงูุจูุงุณุชูู ุงููุงุจู ููุชุญูู",
        "ุงุณุชุฎุฏุงู ุงูููุชุฌุงุช ุงูุจูุงุณุชูููุฉ ุฐุงุช ุงูุงุณุชุฎุฏุงู ุงููุงุญุฏ",
        "ุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงูููุงุฏ ุงูุจูุงุณุชูููุฉ",
        "ุงูุชุฎูุต ูู ุงูุจูุงุณุชูู ูู ุงููุญูุทุงุช"
      ],
      "answer": "ุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงูููุงุฏ ุงูุจูุงุณุชูููุฉ",
    } 
    // ุงููุฒูุฏ ูู ุงูุฃุณุฆูุฉ ุจููุณ ุงูุชูุณูู
  ];

  int currentQuestionIndex = 0; // ููุฑุณ ุงูุณุคุงู ุงูุญุงูู
  int score = 0; // ุนุฏุฏ ุงูููุงุท
  int timeLeft = 20; // ุงูููุช ุงููุชุจูู ููู ุณุคุงู
  Timer? timer; // ูุงุฆู ุงููุคูุช
  final AudioPlayer audioPlayer = AudioPlayer(); // ูุงุฆู ูุชุดุบูู ุงูุตูุช
  bool questionAnswered = false; // ุญุงูุฉ ุงูุณุคุงู (ุชูุช ุงูุฅุฌุงุจุฉ ุฃู ูุง)
  String selectedAnswer = ''; // ุงูุฅุฌุงุจุฉ ุงููุญุฏุฏุฉ

  @override
  void initState() {
    super.initState();
    audioPlayer.setSource(AssetSource('clep.mp3')); // ุชุนููู ูุตุฏุฑ ุงูุตูุช
    startTimer(); // ุจุฏุก ุงููุคูุช
  }

  // ุจุฏุก ุงููุคูุช ููุณุคุงู ุงูุญุงูู
  void startTimer() {
    timer?.cancel(); // ุฅูุบุงุก ุฃู ูุคูุช ุณุงุจู
    setState(() {
      timeLeft = 20; // ุฅุนุงุฏุฉ ุถุจุท ุงูููุช
      questionAnswered = false; // ุฅุนุงุฏุฉ ุญุงูุฉ ุงูุฅุฌุงุจุฉ
      selectedAnswer = ''; // ูุณุญ ุงูุฅุฌุงุจุฉ ุงููุญุฏุฏุฉ
    });
    timer = Timer.periodic(Duration(seconds: 1), (Timer t) {
      if (timeLeft > 0) {
        setState(() => timeLeft--); // ุชูููู ุงูููุช
      } else {
        if (!questionAnswered) {
          questionAnswered = true;
          nextQuestion(); // ุงูุงูุชูุงู ุฅูู ุงูุณุคุงู ุงูุชุงูู
        }
      }
    });
  }

  // ุงูุงูุชูุงู ุฅูู ุงูุณุคุงู ุงูุชุงูู
  void nextQuestion() {
    timer?.cancel(); // ุฅููุงู ุงููุคูุช ุงูุญุงูู
    if (currentQuestionIndex < questions.length - 1) {
      setState(() {
        currentQuestionIndex++; // ุชุญุฏูุซ ููุฑุณ ุงูุณุคุงู
        selectedAnswer = ''; // ูุณุญ ุงูุฅุฌุงุจุฉ ุงููุญุฏุฏุฉ
      });
      startTimer(); // ุจุฏุก ูุคูุช ุฌุฏูุฏ
    } else {
      showResult(); // ุนุฑุถ ุงููุชูุฌุฉ ุนูุฏ ุงูุงูุชูุงุก
    }
  }

  // ุงูุชุญูู ูู ุตุญุฉ ุงูุฅุฌุงุจุฉ ุงููุญุฏุฏุฉ
  Future<void> checkAnswer(String selected) async {
    if (questionAnswered) return; // ููุน ุงูุฅุฌุงุจุฉ ุงูููุฑุฑุฉ
    setState(() {
      selectedAnswer = selected; // ุชุญุฏูุซ ุงูุฅุฌุงุจุฉ ุงููุญุฏุฏุฉ
      questionAnswered = true; // ุชุญุฏูุซ ุญุงูุฉ ุงูุฅุฌุงุจุฉ
    });

    if (selected == questions[currentQuestionIndex]["answer"]) {
      setState(() => score++); // ุฒูุงุฏุฉ ุงูููุงุท ุฅุฐุง ูุงูุช ุงูุฅุฌุงุจุฉ ุตุญูุญุฉ
      await _playSuccessSound(); // ุชุดุบูู ุตูุช ุงููุฌุงุญ
    }

    nextQuestion(); // ุงูุงูุชูุงู ุฅูู ุงูุณุคุงู ุงูุชุงูู
  }

  // ุชุดุบูู ุตูุช ุงููุฌุงุญ ุนูุฏ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ
  Future<void> _playSuccessSound() async {
    try {
      await audioPlayer.play(AssetSource('clep.mp3')); // ุชุดุบูู ุงูุตูุช
      await Future.delayed(Duration(milliseconds: 300)); // ุงูุชุธุงุฑ ููุฏุฉ ูุตูุฑุฉ
    } catch (e) {
      print("Error playing sound: $e"); // ุทุจุงุนุฉ ุฎุทุฃ ุฅุฐุง ุญุฏุซ
    }
  }

  // ุนุฑุถ ุงููุชูุฌุฉ ุงูููุงุฆูุฉ ูู ูุงูุฐุฉ ููุจุซูุฉ
  void showResult() {
    showDialog(
      context: context,
      barrierDismissible: false, // ููุน ุฅุบูุงู ุงููุงูุฐุฉ ุนูุฏ ุงูููุฑ ุฎุงุฑุฌูุง
      builder: (BuildContext context) => AlertDialog(
        title: Text("ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ"), // ุนููุงู ุงููุงูุฐุฉ
        content: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Text("ููุฏ ุญุตูุช ุนูู $score ูู ${questions.length}."), // ุนุฑุถ ุงููุชูุฌุฉ
            SizedBox(height: 10), // ูุณุงุญุฉ ุจูู ุงููุตูุต
            GestureDetector(
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => VideoPlayerScreen()), // ูุชุญ ุดุงุดุฉ ุงูููุฏูู
                );
              },
              child: Text(
                "ุชุนุฑู ุงูุซุฑ ุนู ุงูุงุณุชุฏุงูุฉ",
                style: TextStyle(
                  color: Colors.blue,
                  decoration: TextDecoration.underline, // ุฎุท ุฃุณูู ุงููุต
                ),
              ),
            ),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () {
              Navigator.pop(context); // ุฅุบูุงู ุงููุงูุฐุฉ
              restartGame(); // ุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ
            },
            child: Text("ุฅุนุงุฏุฉ ุงููุนุจุฉ"), // ูุต ุงูุฒุฑ
          ),
        ],
      ),
    );
  }

  // ุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ ูู ุงูุจุฏุงูุฉ
  void restartGame() {
    setState(() {
      currentQuestionIndex = 0; // ุฅุนุงุฏุฉ ููุฑุณ ุงูุณุคุงู
      score = 0; // ุฅุนุงุฏุฉ ุงูููุงุท
    });
    startTimer(); // ุจุฏุก ุงููุคูุช ูู ุฌุฏูุฏ
  }

  @override
  void dispose() {
    timer?.cancel(); // ุฅูุบุงุก ุงููุคูุช
    audioPlayer.dispose(); // ุชุญุฑูุฑ ุงูููุงุฑุฏ ุงููุฑุชุจุทุฉ ุจุงูุตูุช
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final currentQuestion = questions[currentQuestionIndex]; // ุงูุณุคุงู ุงูุญุงูู
    return Scaffold(
      appBar: AppBar(title: Text("ุงุฎุชุจุงุฑ ุงูุจูุฆุฉ - ุงูููุงุท: $score")), // ุนุฑุถ ุงูููุงุท ูู ุงูุดุฑูุท ุงูุนููู
      body: Padding(
        padding: const EdgeInsets.all(16.0), // ูุณุงูุฉ ุญูู ุงููุญุชูู
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center, // ุชูุณูุท ุงูุนููุฏ
          children: [
            SizedBox(height: 20),
            Text(
              currentQuestion["question"], // ูุต ุงูุณุคุงู
              style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold), // ุชูุณูู ุงููุต
              textAlign: TextAlign.center, // ุชูุณูุท ุงููุต
            ),
            SizedBox(height: 20),
            // ุนุฑุถ ุฎูุงุฑุงุช ุงูุฅุฌุงุจุฉ
            ...currentQuestion["options"].map<Widget>((option) {
              // ุชุญุฏูุฏ ููู ุงูุฒุฑ ุจูุงุกู ุนูู ุงูุญุงูุฉ
              Color buttonColor = questionAnswered
                  ? (option == currentQuestion["answer"]
                      ? Colors.green
                      : (option == selectedAnswer ? Colors.red : Colors.black))
                  : Color.fromARGB(255, 84, 208, 206);

              return ElevatedButton(
                onPressed: questionAnswered ? null : () => checkAnswer(option), // ุชูุนูู ุงูุฒุฑ
                style: ElevatedButton.styleFrom(backgroundColor: buttonColor), // ููู ุงูุฒุฑ
                child: Text(option, style: TextStyle(fontSize: 18)), // ูุต ุงูุฎูุงุฑ
              );
            }).toList(),
            SizedBox(height: 20),
            // ุนุฑุถ ุงูููุช ุงููุชุจูู
            Text("ุงูููุช ุงููุชุจูู: $timeLeft",
                style: TextStyle(fontSize: 18, color: Colors.blue)),
          ],
        ),
      ),
    );
  }
}
// ุดุงุดุฉ ูุนุฑุถ ููุฏูู ุนู ุงูุงุณุชุฏุงูุฉ
class VideoPlayerScreen extends StatefulWidget {
  @override
  _VideoPlayerScreenState createState() => _VideoPlayerScreenState();
}

// ุงูุญุงูุฉ ุงููุฑุชุจุทุฉ ุจุดุงุดุฉ ุงูููุฏูู
class _VideoPlayerScreenState extends State<VideoPlayerScreen> {
  late VideoPlayerController _controller; // ูุงุฆู ููุชุญูู ูู ูุดุบู ุงูููุฏูู

  @override
  void initState() {
    super.initState();
    // ุชููุฆุฉ ูุดุบู ุงูููุฏูู ูุน ููู ุงูููุฏูู ูู ูุฌูุฏ ุงูุฃุตูู
    _controller = VideoPlayerController.asset('assets/eee.mp4')
      ..initialize().then((_) {
        setState(() {}); // ุฅุนุงุฏุฉ ุจูุงุก ุงููุงุฌูุฉ ุจุนุฏ ุงูุชููุฆุฉ
        _controller.play(); // ุจุฏุก ุชุดุบูู ุงูููุฏูู ุชููุงุฆููุง
      });
  }

  @override
  void dispose() {
    _controller.dispose(); // ุชุญุฑูุฑ ููุงุฑุฏ ุงูููุฏูู ุนูุฏ ุงูุฅุบูุงู
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("ูุดุงูุฏุฉ ุงูููุฏูู")), // ุดุฑูุท ุนููู ุจุนููุงู
      body: Center(
        // ุนุฑุถ ุงูููุฏูู ุฃู ูุคุดุฑ ุงูุชุญููู ุฅุฐุง ูู ููุชูู ุงูุชููุฆุฉ
        child: _controller.value.isInitialized
            ? AspectRatio(
                aspectRatio: _controller.value.aspectRatio, // ูุณุจุฉ ุงูุนุฑุถ ุฅูู ุงูุงุฑุชูุงุน
                child: VideoPlayer(_controller), // ูุดุบู ุงูููุฏูู
              )
            : CircularProgressIndicator(), // ูุคุดุฑ ุชุญููู ุงูููุฏูู
      ),
    );
  }
}
